
parameters:
  - name: environment
    type: string
    default: 'dev'
  - name: projectName
    type: string
    default: 'evo-taskers'
  - name: appName
    type: string
    default: 'unlockbookings'
  - name: AzureRM-Connection
    type: string
    default: 'EVO-Taskers-Sandbox'

variables:
  - group: 'terraform-backend'
  - name: workingDirectory
    type: string
    value: 'project/${{ parameters.projectName }}/${{ parameters.appName }}'

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: Plan
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      inputs:
        terraformVersion: '1.5.0'  # Or latest

    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: ${{variables.workingDirectory}}
        backendServiceArm: ${{parameters.AzureRM-Connection}}  # Your WIF service connection
        backendAzureRmResourceGroupName: ${{variables.BACKEND_RESOURCE_GROUP_NAME}}  # Your state RG
        backendAzureRmStorageAccountName: ${{variables.BACKEND_STORAGE_ACCOUNT_NAME}}    # Your storage account
        backendAzureRmContainerName: ${{variables.BACKEND_CONTAINER_NAME}}           # Container
        backendAzureRmKey: '${{ parameters.projectName }}-${{ parameters.appName }}-${{ parameters.environment }}.tfstate'           # State file key
      env:
        ARM_USE_AZUREAD: true

    - task: TerraformTaskV4@4
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: ${{variables.workingDirectory}}
        environmentServiceNameAzureRM: 'tf-logic-app-sc'  # Your WIF service connection
        commandOptions: '-out=tfplan -var-file="dev.tfvars"'  # Adjust vars file

- stage: Apply
  displayName: 'Terraform Apply'
  dependsOn: Plan
  condition: succeeded()
  jobs:
  - deployment: Apply
    environment: '-${{parameters.projectName}}-${{parameters.environment}}'  # Azure DevOps environment for approvals
    strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: ${{variables.workingDirectory}}
              environmentServiceNameAzureRM: ${{parameters.AzureRM-Connection}}
              commandOptions: 'tfplan -auto-approve -var-file="dev.tfvars"'
            env:
              ARM_USE_AZUREAD: true